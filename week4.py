# -*- coding: utf-8 -*-
"""
Created on Tue Mar  3 00:28:53 2020

@author: shind
"""
from sklearn import datasets
# Load the diabetes dataset
diabetes = datasets.load_diabetes()
x = diabetes.data
y = diabetes.target
print(x.shape)
print(y.shape)
#prints out first 3 predictor variables for first 10 patients
print(x[0:10, 0:3])
print(y[0:10])
from sklearn.utils import shuffle
x, y = shuffle(x, y, random_state=1)
print(x.shape)
print(y.shape)
print(x.shape)
x = x[:, 2]
print(x.shape)
y_train = y[:train_set_size]   # selects first 250 rows (targets) for train set
y_test = y[train_set_size:]    # selects from row 250 until the last one for test set
print(y_train.shape)
print(y_test.shape)

x_train = x[:train_set_size]   # selects first 250 rows (targets) for train set
x_test = x[train_set_size:]    # selects from row 250 until the last one for test set
print(x_train.shape)
print(x_test.shape)

import pylab as plt
trainingDataScatterPlot=plt.scatter(x_train, y_train) # Training data represented with blue dots 
testDataScatterPlot=plt.scatter(x_test, y_test) # Test data represented with Orange dots
plt.xlabel('Data')
plt.ylabel('Target')
plt.legend((trainingDataScatterPlot,testDataScatterPlot),("Training dataest data"));

from sklearn import linear_model
linearRegressionModel = linear_model.LinearRegression()
linearRegressionModel.fit(x_train.reshape(-1, 1), y_train);
print("coef",linearRegressionModel.coef_) #theta 1
print("intercept",linearRegressionModel.intercept_) #theta 0

import numpy as np
# The mean square error
print("Training error: ", np.mean((linearRegressionModel.predict(x_train.reshape(-1, 1)) - y_train) ** 2))
print("Test     error: ", np.mean((linearRegressionModel.predict(x_test.reshape(-1, 1)) - y_test) ** 2))

print(linearRegressionModel.predict(np.array(0.04).reshape(1, -1)) )

# Visualises dots, where each dot represent a data exaple and corresponding target
plt.scatter(x_train, y_train,  color='blue')
# Plots the linear model
plt.plot(x_train, linearRegressionModel.predict(x_train.reshape(-1, 1)), color='red', linewidth=3);
plt.xlabel('Data')
plt.ylabel('Target')

# Visualises dots, where each dot represent a data exaple and corresponding teacher
plt.scatter(x_test, y_test,  color='orange')
# Plots the linear model
plt.plot(x_test, linearRegressionModel.predict(x_test.reshape(-1, 1)), color='red', linewidth=3);
plt.xlabel('Data')
plt.ylabel('Target');

print(linearRegressionModel.score(x_test.reshape(-1, 1), y_test))